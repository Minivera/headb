//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var APIKeys = newAPIKeysTable("public", "api_keys", "")

type aPIKeysTable struct {
	postgres.Table

	//Columns
	ID         postgres.ColumnInteger
	Value      postgres.ColumnString
	UserID     postgres.ColumnInteger
	LastUsedAt postgres.ColumnTimestampz
	CreatedAt  postgres.ColumnTimestampz
	UpdatedAt  postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type APIKeysTable struct {
	aPIKeysTable

	EXCLUDED aPIKeysTable
}

// AS creates new APIKeysTable with assigned alias
func (a APIKeysTable) AS(alias string) *APIKeysTable {
	return newAPIKeysTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new APIKeysTable with assigned schema name
func (a APIKeysTable) FromSchema(schemaName string) *APIKeysTable {
	return newAPIKeysTable(schemaName, a.TableName(), a.Alias())
}

func newAPIKeysTable(schemaName, tableName, alias string) *APIKeysTable {
	return &APIKeysTable{
		aPIKeysTable: newAPIKeysTableImpl(schemaName, tableName, alias),
		EXCLUDED:     newAPIKeysTableImpl("", "excluded", ""),
	}
}

func newAPIKeysTableImpl(schemaName, tableName, alias string) aPIKeysTable {
	var (
		IDColumn         = postgres.IntegerColumn("id")
		ValueColumn      = postgres.StringColumn("value")
		UserIDColumn     = postgres.IntegerColumn("user_id")
		LastUsedAtColumn = postgres.TimestampzColumn("last_used_at")
		CreatedAtColumn  = postgres.TimestampzColumn("created_at")
		UpdatedAtColumn  = postgres.TimestampzColumn("updated_at")
		allColumns       = postgres.ColumnList{IDColumn, ValueColumn, UserIDColumn, LastUsedAtColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns   = postgres.ColumnList{ValueColumn, UserIDColumn, LastUsedAtColumn, CreatedAtColumn, UpdatedAtColumn}
	)

	return aPIKeysTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:         IDColumn,
		Value:      ValueColumn,
		UserID:     UserIDColumn,
		LastUsedAt: LastUsedAtColumn,
		CreatedAt:  CreatedAtColumn,
		UpdatedAt:  UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
