//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type UserStatus string

const (
	UserStatus_Pending  UserStatus = "pending"
	UserStatus_Accepted UserStatus = "accepted"
	UserStatus_Denied   UserStatus = "denied"
)

func (e *UserStatus) Scan(value interface{}) error {
	if v, ok := value.(string); !ok {
		return errors.New("jet: Invalid data for UserStatus enum")
	} else {
		switch string(v) {
		case "pending":
			*e = UserStatus_Pending
		case "accepted":
			*e = UserStatus_Accepted
		case "denied":
			*e = UserStatus_Denied
		default:
			return errors.New("jet: Inavlid data " + string(v) + "for UserStatus enum")
		}

		return nil
	}
}

func (e UserStatus) String() string {
	return string(e)
}
