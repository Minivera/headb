//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Permissions = newPermissionsTable("public", "permissions", "")

type permissionsTable struct {
	postgres.Table

	//Columns
	ID         postgres.ColumnString
	KeyID      postgres.ColumnString
	DatabaseID postgres.ColumnString
	Role       postgres.ColumnString
	CreatedAt  postgres.ColumnTimestampz
	UpdatedAt  postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PermissionsTable struct {
	permissionsTable

	EXCLUDED permissionsTable
}

// AS creates new PermissionsTable with assigned alias
func (a PermissionsTable) AS(alias string) *PermissionsTable {
	return newPermissionsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PermissionsTable with assigned schema name
func (a PermissionsTable) FromSchema(schemaName string) *PermissionsTable {
	return newPermissionsTable(schemaName, a.TableName(), a.Alias())
}

func newPermissionsTable(schemaName, tableName, alias string) *PermissionsTable {
	return &PermissionsTable{
		permissionsTable: newPermissionsTableImpl(schemaName, tableName, alias),
		EXCLUDED:         newPermissionsTableImpl("", "excluded", ""),
	}
}

func newPermissionsTableImpl(schemaName, tableName, alias string) permissionsTable {
	var (
		IDColumn         = postgres.StringColumn("id")
		KeyIDColumn      = postgres.StringColumn("key_id")
		DatabaseIDColumn = postgres.StringColumn("database_id")
		RoleColumn       = postgres.StringColumn("role")
		CreatedAtColumn  = postgres.TimestampzColumn("created_at")
		UpdatedAtColumn  = postgres.TimestampzColumn("updated_at")
		allColumns       = postgres.ColumnList{IDColumn, KeyIDColumn, DatabaseIDColumn, RoleColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns   = postgres.ColumnList{KeyIDColumn, DatabaseIDColumn, RoleColumn, CreatedAtColumn, UpdatedAtColumn}
	)

	return permissionsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:         IDColumn,
		KeyID:      KeyIDColumn,
		DatabaseID: DatabaseIDColumn,
		Role:       RoleColumn,
		CreatedAt:  CreatedAtColumn,
		UpdatedAt:  UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
