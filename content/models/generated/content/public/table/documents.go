//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Documents = newDocumentsTable("public", "documents", "")

type documentsTable struct {
	postgres.Table

	//Columns
	ID           postgres.ColumnString
	Content      postgres.ColumnString
	CollectionID postgres.ColumnString
	CreatedAt    postgres.ColumnTimestampz
	UpdatedAt    postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type DocumentsTable struct {
	documentsTable

	EXCLUDED documentsTable
}

// AS creates new DocumentsTable with assigned alias
func (a DocumentsTable) AS(alias string) *DocumentsTable {
	return newDocumentsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new DocumentsTable with assigned schema name
func (a DocumentsTable) FromSchema(schemaName string) *DocumentsTable {
	return newDocumentsTable(schemaName, a.TableName(), a.Alias())
}

func newDocumentsTable(schemaName, tableName, alias string) *DocumentsTable {
	return &DocumentsTable{
		documentsTable: newDocumentsTableImpl(schemaName, tableName, alias),
		EXCLUDED:       newDocumentsTableImpl("", "excluded", ""),
	}
}

func newDocumentsTableImpl(schemaName, tableName, alias string) documentsTable {
	var (
		IDColumn           = postgres.StringColumn("id")
		ContentColumn      = postgres.StringColumn("content")
		CollectionIDColumn = postgres.StringColumn("collection_id")
		CreatedAtColumn    = postgres.TimestampzColumn("created_at")
		UpdatedAtColumn    = postgres.TimestampzColumn("updated_at")
		allColumns         = postgres.ColumnList{IDColumn, ContentColumn, CollectionIDColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns     = postgres.ColumnList{ContentColumn, CollectionIDColumn, CreatedAtColumn, UpdatedAtColumn}
	)

	return documentsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		Content:      ContentColumn,
		CollectionID: CollectionIDColumn,
		CreatedAt:    CreatedAtColumn,
		UpdatedAt:    UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
