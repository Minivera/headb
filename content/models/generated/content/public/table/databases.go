//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Databases = newDatabasesTable("public", "databases", "")

type databasesTable struct {
	postgres.Table

	//Columns
	ID        postgres.ColumnString
	Name      postgres.ColumnString
	UserID    postgres.ColumnString
	CreatedAt postgres.ColumnTimestampz
	UpdatedAt postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type DatabasesTable struct {
	databasesTable

	EXCLUDED databasesTable
}

// AS creates new DatabasesTable with assigned alias
func (a DatabasesTable) AS(alias string) *DatabasesTable {
	return newDatabasesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new DatabasesTable with assigned schema name
func (a DatabasesTable) FromSchema(schemaName string) *DatabasesTable {
	return newDatabasesTable(schemaName, a.TableName(), a.Alias())
}

func newDatabasesTable(schemaName, tableName, alias string) *DatabasesTable {
	return &DatabasesTable{
		databasesTable: newDatabasesTableImpl(schemaName, tableName, alias),
		EXCLUDED:       newDatabasesTableImpl("", "excluded", ""),
	}
}

func newDatabasesTableImpl(schemaName, tableName, alias string) databasesTable {
	var (
		IDColumn        = postgres.StringColumn("id")
		NameColumn      = postgres.StringColumn("name")
		UserIDColumn    = postgres.StringColumn("user_id")
		CreatedAtColumn = postgres.TimestampzColumn("created_at")
		UpdatedAtColumn = postgres.TimestampzColumn("updated_at")
		allColumns      = postgres.ColumnList{IDColumn, NameColumn, UserIDColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns  = postgres.ColumnList{NameColumn, UserIDColumn, CreatedAtColumn, UpdatedAtColumn}
	)

	return databasesTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		Name:      NameColumn,
		UserID:    UserIDColumn,
		CreatedAt: CreatedAtColumn,
		UpdatedAt: UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
